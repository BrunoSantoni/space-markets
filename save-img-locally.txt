index.js

// app.use(
//   '/files',
//   express.static(path.resolve(__dirname, '..', 'tmp', 'uploads')),
// )
// app.use(
//   '/files',
//   express.static(path.resolve(__dirname, '..', 'tmp', 'uploads', 'products')),
// )
// app.use(
//   '/files',
//   express.static(path.resolve(__dirname, '..', 'tmp', 'uploads', 'user')),
// )


UserController.js

/* Salvar img em binary no banco */
    // const user_profile_picture = new Buffer.from(user_picture.split(",")[1],"base64")
    // await fs.writeFile(`../backend/tmp/uploads/user/${user._id}.png`, user.user_profile_picture)


multer config files.js

dest: path.resolve(__dirname, '..', '..', 'tmp', 'uploads'), // Para onde irÃ£o os uploads

local: multer.diskStorage({
    destination: (req, file, cb) => {
      cb(null, path.resolve(__dirname, '..', '..', 'tmp', 'uploads'))
    },
    filename: (req, file, cb) => {
      crypto.randomBytes(4, (err, hash) => {
        if (err) {
          cb(err)
        }
        // Define o novo nome da imagem, adicionando os caracteres
        file.key = `${hash.toString('hex')}-${file.originalname}`

        cb(null, file.key)
      })
    },
  }),